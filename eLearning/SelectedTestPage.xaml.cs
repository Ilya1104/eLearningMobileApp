using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Xamarin.Forms;
using Xamarin.Forms.Xaml;

namespace eLearning
{
    [XamlCompilation(XamlCompilationOptions.Compile)]
    public partial class SelectedTestPage : ContentPage
    {
        
        public SelectedTestPage()
        {
            InitializeComponent();
        }
     
             
        Dictionary<int, string> answers = new Dictionary<int, string>()
        {
            [0] = "элементы, квадратной формы, содержащие информацию о цвете",[1] = "набор координат вершин, образующих простейшие геометрические фигуры",[2] = "векторный графический элемент",[3] = "векторное изображение различных размеров",[4] = "набор пикселей",[5] = "инструмент, отображающий изображение с отмеченной увеличинной областью",[6] = "единица измерения, определяющая количество пикселей на единицу пространства",[7] = "ширину и высоту изображения",[8] = "ширину и велечину изображения",[9] = "метод увеличения/уменьшения изображения",
            [10] = "стандарт, содержащий доп. информацию пикселях",[11] = "ключевые свойства объекта",[12] = "данные об авторских правах",[13] = "данные об авторских правах с подробным описанием содержимого снимка",[14] = "информация об остройстве, создавшем снимок",[15] = "первоначальный вид снимка",[16] = "суммарный протокол редактирования изображения",[17] = "онлайн-сервис удаления EXIF-данных",[18] = "утилита для удаления EXIF-данных",[19] = "данные о создателе снимка",
            [20] = "основные части программы",[21] = "содержимое атрибутов инструмента",[22] = "область, позволяющая переключаться между рабочими окнами",[23] = "набор инструментов по отдельным видам работ с изображениями",[24] = "набор команд главного меню",[25] = "набор средств взаимодействия с рабочим пространством",[26] = "набор элементов манипуляции над изображением",[27] = "зона, в которой ведутся действия над изображением",[28] = "информация об изменяемом объекте",[29] = "набор инструментов для рабочего пространства",
            [30] = "Имя будущего документа",[31] = "Ширина будущего изображения",[32] = "Высота будущего изображения",[33] = "Количество точек на единицу длины",[34] = "Режим отображения изображения",[35] = "Определяет фон изображения",[36] = "Единица изображения",[37] = "Узор для заливки",[38] = "Диапазон цветов для заполнения",[39] = "Сглаживание для уменьшения сегментации",
            [40] = "слой", [41] = "Задний фон", [42] = "искривление текста", [43] = "Стиль", [44] = "небольшие программы, выполняющие одну узкую функцию", [45] = "Волшебная палочка", [46] = "Диапазон выделяемых оттенков", [47] = "выделяет те пикселы, находящиеся в соседних с выбранным областях", [48] = "Распространяет свое действие на все слои", [49] = "Позволяет рисовать объекты",
            [50] = "Качество изображения", [51] = "Лассо", [52] = "Быстрая маска", [53] = "Кисть", [54] = "Чёрный", [55] = "Белый", [56] = "Кадрирование", [57] = "Выполнить сведение", [58] = "Масштабирование", [59] = "преобразовывает выделение во временную маску",
            [60] = "увеличение или уменьшение размера объекта", [61] = "изменение положения объекта вокруг своей оси", [62] = "изменение положения верхней или нижней границы изображения", [63] = "растягивание объекта по всем направлениям", [64] = "схождение объекта в одной точке", [65] = "изменение формы объекта", [66] = "сделать зеркальную горизонтальную проекцию", [67] = "сделать зеркальную вертикальную проекцию", [68] = "объединить слои", [69] = "соразмерность сторон",
            [70] = "размер инструмента рисования", [71] = "способ наложения пикселов", [72] = "скорость наложения цвета", [73] = "отклонение размера от исходного", [74] = "сила сжатия кисти", [75] = "минимальное сжатие кисти", [76] = "неравномерная концентрация разбрызгивания", [77] = "определяет самую плохую видимость", [78] = "размытие границ объекта", [79] = "область действия инструмента", 
            [80] = "история", [81] = "инструмент, позволяющий частично вернуть изменения", [82] = "инструмент, позволяющий частично вернуть изменения и применяет эффекты", [83] = "степень непропускания нижнего слоя", [84] = "при растягивании ширина и высота равны", [85] = "рисует от центра", [86] = "определяет степень изогнутости", [87] = "степень длины лучей", [88] = "кратность отличия ширины от высоты", [89] = "стиль границ фигур", 
            [90] = "внешнее очертание объекта", [91] = "временное выделение очертание объекта", [92] = "инструмент, позволяющий создавать прямые контуры", [93] = "инструмент, позволяющий создавать произвольные контуры", [94] = "инструмент, который точечно выделяет объекты", [95] = "инструмент, который позволяет добавить точки привязки", [96] = "инструмент, который позволяет удалить точки привязки", [97] = "инструмент, изменяющий свойства изгиба линий", [98] = "инструмент для перемещения контура", [99] = "инструмент перемещения всего контура", 
            [100] = "инструмент, позволяющий рисовать контуры, привязанные к краям областей изображения", [101] = "инструмент, позволяющий создавать произвольные контуры", [102] = "параметр, задающий чувствительность движениям мыши", [103] = "параметр, который определяет расстояние обнаружения края от курсора", [104] = "параметр, выражающий степень насыщенности между пикселами области", [105] = "параметр, указывающий переодичность создания узловых точек", [106] = "инструмент, позволяющий создавать прямые контуры", [107] = "внешнее очертание объекта", [108] = "позиция узла, к которому присоединяется объект", [109] = "особая позиция кривой", 
            [110] = "инструмент, позволяющий восстанавливать участки фотографий с помощью сохранившихся фрагментов",[111] = "инструмент, позволяющий автоматически ретушировать недостатки фотографий",[112] = "инструмент, восстанавливающий выделенную область с помощью пикселов другой области",[113] = "инструмент, удаляющий эффект \"красных глаз\"",[114] = "инструмент, наносящий одной части изображения поверх другой части изображения", [115] = "инструмент, рисующий текстурой", [116] = "инструмент, стирающий ненужные объекты", [117] = "инструмент, отделяющий объект от фона", [118] = "инструмент, сочетающий свойства \"ластика\" и \"волшебной палочки\"", [119] = "размытие границ объекта", 
            [120] = "инструмент, смягчающий четкие края", [121] = "инструмент, усиливающий контрастность вдоль краев", [122] = "инструмент, имитирующий эффект размазывания свежей краски", [123] = "инструмент, повышающий яркость области изображения", [124] = "инструмент, понижающий яркость области изображения", [125] = "инструмент, изменяющий насыщенность цвета", [126] = "способ наложения пикселов", [127] = "инструмент, позволяющий рисовать объекты", [128] = "степень воздействия на определённую точку", [129] = "количество света, попадающего на объект"
        };
        RadioButton[] r = new RadioButton[4];
        string[] ss = new string[130]
        {
           /*1-2*/ "Что такое \"Пиксель\"?", "Векторное изображение - это:", "Интрумент \"Текст\" - это:", "Что представляет собой произвольная фигура?", "Растровое изображение - это:", "Палитра \"Навигатор\" это:", "Что такое \"Разрешение\"?", "Размерность представляет собой:", "Что представляет собой \"Размер печатного оттиска\"?", "Интерполяция это:",
            "\"EXIF\" представляет собой:", "EXIF. Описание - это:", "EXIF. \"IPTC\" представляет собой:", "\"IPTC Extension\" это:", "Данные камеры - это:","Что такое \"Исходный файл\"?", "История - это:", "\"IMGonline\" это:", "EXIFCleaner - это:", "Источник представляет собой:",
            "Что представляет собой интерфейс?", "Панель параметров - это:", "Панель вкладок - это:", "Что представляет собой \"Рабочая среда\"?", "Панель управления - это:", "Что представляет собой \"Панель инструментов\"?", "Что представляет собой \"Область палитр\"?", "Рабочее пространство это:", "Строка состояния - это:", "Что такое \"Вспомогательные элементы\"?",
            "Создание файла. \"Имя\" это:", "Создание файла. \"Ширина\" это:", "Создание файла. \"Высота\" это:", "Создание файла. \"Разрешение\" это:", "Создание файла. \"Режим\" это:", "Создание файла. \"Содержимое фона\" это:", "Пиксел - это:", "Шаблон - это:", "Допуск - это:", "Дизеринг - это:",
          /*  6-8*/"Основной объект программы это:", "Базовым слоем является:", "На какой вкладке осуществляется деформация текста?", "В каком списке выбирается вариант деформации?", "Что такое фильтры?", "С помощью какого инструмента выделяютсяпикселы смежного оттенка?", "Что определяет поле \"Допуск\"?", "Что определяет поле \"Смежные пикселы\"?", "Что определяет поле \"Образец всех слоев\"?","ЧТо делает инструмент \"Кисть\"?",
            "От чего зависит выделение объекта?", "61Какой инструмент для выделения использовался в лекции?", "Какой инструмент использовался для преобразования в маску?", "Каким инструментом убирается выделение?", "Какой цвет в палитре добавляет цветовое наложение?", "Какой цвет удаляет цветовое наложение?", "С помощью какого инструмента осуществляется обрезка изображения?", "Какую команду нужно выполнить, чтобы объединить слои?", "Какую команду нужно выполнить, чтобы выполнить масштабирование?", "Что делает \"Быстрая маска\"?",
            "Масштабирование - это:", "Поворот - это:", "72Наклон - это:", "Что такое \"Искажение\"?", "Что такое \"Перспектива\"?", "Деформация - это:", "Что значит \"Отразить по горизонтали\"?", "Что значит \"Отразить по вертикали\"?", "Выполнить сведение - это:", "Сохранение пропорций - это:",
            "Главный диаметр - это:", "Рисование. Режим - это:", "Рисование. Что такое \"Нажим\"?", "Колебание размера - это:", "Рисование. Что такое \"Колебание формы\"?", "Минимальная форма - это:", "Колебание счётчика - это:", "Что означает \"Минимальная глубина\"?", "Сглаживание - это:", "Что значит \"Ограничения\"?",
         /* 12-13*/ "Как называется панель, в которой хранятся выполненные операции?", "Архивная кисть - это:", "Архивная художественная кисть - это:", "Непрозрачность - это:", "Что означает параметр \"Квадрат\"?", "Параметр \"От центра\" означает, что:", "Что означает параметр \"Кривизна\"?", "Глубина лучей - это:", "Что означает параметр \"Задать пропорции\"?", "Режим \"Контуры\" определяет:",
           /*14-15*/"Контур - это:", "Рабочий контур - это:", "Перо - это:", "Свободное перо - это:", "Магнитное перо - это:", "Инструмент \"Перо +\" это:", "Инструмент \"Перо -\" это:", "Угол - это:", "Стрелка - это:", "Инструмент \"Выделение контура\" это:",
           "Магнитное перо - это:", "Свободное перо - это:", "Свойство Погрешность - это:", "Ширина - это:", "Контрастность - это:", "Частота - это:", "Перо - это:", "Контур - это:", "Точка привязки - это:", "Узловая точка - это:",
           "Что такое \"Восстанавливающая кисть\"?", "Что такое \"Точечная восстанавливающая кисть\"?", "Что такое \"Заплатка\"?", "Красные глаза - это:", "Штамп - это:", "Что такое \"Узорный штамп\"?","Ластик - это:", "Что такое \"Фоновый ластик\"?", "Волшебный ластик - это:", "Сглаживание - это:",
           "Что такое \"Размытие\"?", "Резкость - это:", "Что такое \"Палец\"?", "Осветлитель - это:", "Что такое \"Затемнитель\"?", "Губка  - это:", "Что такое \"Режим\"?", "Кисть - это:", "Что такое \"Интенсивность\"?", "Экспозиция - это:"

        }, allAnswers = new string[10];
        int[] arr = new int[10];
        public int rightAnswers, questionCount, testMark, right;
        Random rnd = new Random();
        public int idTest;
        protected override  bool OnBackButtonPressed()
        {
            bool res;
            if (questionCount < 10)
            {
                DisplayAlert("Предупреждение", "Завершите тест, чтобы выйти!", "Ок");
                return true;
            }
             else
            {
                return false;
                Application.Current.MainPage = new TabPage();
            }

        }
        protected async override void OnAppearing()
        {
            rightAnswers = 0;
            testMark = 0;
            bButton.IsVisible = false;
            cButton.IsVisible = false;
            visibleRadio.IsVisible = false;
            userAnswers.IsVisible = false;
            idTest = int.Parse(testId.Text)-1;
                 r[0] = radio1;
                 r[1] = radio2;
                 r[2] = radio3;
                 r[3] = radio4;
                 rightAnswers = 0;
                 questionCount = 0;
                 mark.IsVisible = false;
                 gg();
            WriteRadioAnswers();
                 /*for (int i = 0; i < 10; i++)
                 {
                     testL.Text += (" " + arr[i]);
                 }*/
        }
        private int[] radioIndex = new int[4];
        private int[] radio()
        {
            for (int i = 0; i < 4; i++)
            {
                radioIndex[i] = i + 1;
            }
            for (int i = 0; i < 4; i++)
            {
                int b = rnd.Next(i);
                int c = radioIndex[i];
                radioIndex[i] = radioIndex[b];
                radioIndex[b] = c;
            }
            return radioIndex;
        }
        ProfilePage p = new ProfilePage();
       
        private void Get(object sender, EventArgs e)
        {
            visibleRadio.IsVisible = true;
            aButton.IsVisible = false;
            bButton.IsVisible = true;
        }
        private void bButton_Clicked(object sender, EventArgs e)
        {
                if (radio1.IsChecked || radio2.IsChecked || radio3.IsChecked || radio4.IsChecked)
                {
                    GetQuestions();
                    radio(); 
                    WriteRadioAnswers();
                    r[0].IsChecked = false;
                    r[1].IsChecked = false;
                    r[2].IsChecked = false;
                    r[3].IsChecked = false;
                }
                else
                {
                    DisplayAlert("Ни один вариант ответа не выбран!", "Пожалуйста, выберите 1 из 4 вариантов ответа", "Ок");
                }
               
        }
        private void GetOut(object sender, EventArgs e)
        {
            Application.Current.MainPage = new TabPage();
        }
        public void WriteRadioAnswers()
        {
            if (questionCount < 10)
            {
                questions.Text = ss[arr[questionCount]];
                for (int i = 0; i < 4; i++)
                {
                    if (r[i].TabIndex == radioIndex[0])
                    {
                        r[i].Content = answers[arr[questionCount]];
                        right = i;
                    }
                    else
                    {
                        if (right != i)
                        {
                            r[i].Content = answers[rnd.Next(0, 29)];
                        }
                        else
                        {
                            r[i].Content = answers[rnd.Next(0, 29)];
                        }
                    }
                }
            }
        }
        private void GetQuestions()
        {
                 
                                if (r[right].IsChecked)
                                {
                                    if (r[right].Content.ToString() == answers[arr[questionCount]].ToString())
                                    {
                                        rightAnswers++;
                                        allAnswers[questionCount] = "Верно";
                                    }                                    
                                }
                                else
                                {
                                    allAnswers[questionCount] = "Не верно";
                                }                            
                        questionCount++;
            if(questionCount == 10)
            {
                for (int i = 0; i < 10; i++)
                {
                    userAnswers.Text += $"\nВопрос {i + 1} - {allAnswers[i]}";
                }
                userAnswers.IsVisible = true;
                bButton.IsVisible = false;
                cButton.IsVisible = true;
                testMark = rightAnswers;
                p.sumMarks += testMark;
                p.profileTestCount++;
                visibleRadio.IsVisible = false;
                mark.IsVisible = true;
                mark.Text = "Ваша оценка: " + rightAnswers.ToString();
            }
        }
        private int[] gg()
        {
            for (int i = 0; i < 10; i++)
            {
                arr[i] = i+(idTest*10);
            }
            for (int i = 0; i < 10; i++)
            {
                int b = rnd.Next(i);
                int c = arr[i];
                arr[i] = arr[b];
                arr[b] = c;
            }
            return arr;
        }
    }
}